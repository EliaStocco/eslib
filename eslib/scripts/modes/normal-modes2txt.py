#!/usr/bin/env python
from ase.io import write
from ase import Atoms
from eslib.classes.trajectory import AtomicStructures
from eslib.formatting import esfmt, warning, float_format, error
from eslib.classes.normal_modes import NormalModes
import numpy as np
from typing import List, Tuple
import os
from eslib.output import output_folder

#---------------------------------------#
# Description of the script's purpose
description = "Save the normal modes matrices and vectors to txt file"

#---------------------------------------#
def prepare_args(description):
    import argparse
    parser = argparse.ArgumentParser(description=description)
    argv = {"metavar" : "\b",}
    parser.add_argument("-nm", "--normal_modes", type=str, **argv, help="normal modes file generated by 'iPI2NormalModes.py' (default: 'normal-modes.pickle')", default="normal-modes.pickle")
    parser.add_argument("-p" , "--prefix"      , **argv, required=False, type=str  , help="prefix for the normal modes (default: 'eslib')", default='eslib')
    parser.add_argument("-o" , "--output"      , **argv, required=False, type=str  , help="output folder (default: 'vib')", default='vib')
    return parser

#---------------------------------------#
@esfmt(prepare_args,description)
def main(args):

    #------------------#
    print("\tReading phonon modes from file '{:s}' ... ".format(args.normal_modes), end="")
    nm = NormalModes.from_pickle(args.normal_modes)
    print("done")

    #------------------#
    output_folder(args.output)

    #------------------#
    print("\tWriting normal modes to folder '{:s}' ... ".format(args.output), end="")
    nm.to_folder(folder=args.output,prefix=args.prefix)
    print("done")    
   
#---------------------------------------#
if __name__ == "__main__":
    main()